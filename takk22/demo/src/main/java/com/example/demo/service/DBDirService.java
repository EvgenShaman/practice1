package com.example.demo.service;

import com.example.demo.Author;
import com.example.demo.AuthorRepository;
import com.example.demo.Book;
import com.example.demo.BookRepository;
import jakarta.annotation.PostConstruct;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Async;
import org.springframework.scheduling.annotation.EnableAsync;
import org.springframework.scheduling.annotation.EnableScheduling;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Service;

import java.io.*;
import java.util.List;

@EnableAsync
@EnableScheduling
@Service
@RequiredArgsConstructor
@Slf4j
public class DBDirService{
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private BookRepository bookRepository;
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private AuthorRepository authorRepository;
    @PostConstruct
    void func(){
        doScheduledTask();
    }
    @Scheduled(fixedDelay = 5000)
    @Async
    public void doScheduledTask() {
        System.out.println("Scheduled task");
        Writer writer = null;
        try {
            writer = new BufferedWriter(new OutputStreamWriter(
                    new FileOutputStream("DBDir/authors.txt"), "utf-8"));
            String text = "";
            List<Book> ayaya = bookRepository.findAll();
            while (ayaya.size() != 0){
                text += ayaya.get(0).getName() + "\n";
                text += ayaya.get(0).getCreationDate() + "\n";
                text += ayaya.get(0).getAuthor().getFirstName() + "\n" + "\n";
                ayaya.remove(0);
            }
            writer.write(text);
        } catch (IOException ex) {
            // Report
        } finally {
            try {writer.close();} catch (Exception ex) {/*ignore*/}
        }
        try {
            writer = new BufferedWriter(new OutputStreamWriter(
                    new FileOutputStream("DBDir/books.txt"), "utf-8"));
            String text = "";
            List<Author> ayaya = authorRepository.findAll();
            while (ayaya.size() != 0){
                text += ayaya.get(0).getFirstName() + "\n";
                text += ayaya.get(0).getMiddleName() + "\n";
                text += ayaya.get(0).getLastName() + "\n";
                text += ayaya.get(0).getBirthDate() + "\n" + "\n";
                ayaya.remove(0);
            }
            writer.write(text);
        } catch (IOException ex) {
            // Report
        } finally {
            try {writer.close();} catch (Exception ex) {/*ignore*/}
        }
    }
}
